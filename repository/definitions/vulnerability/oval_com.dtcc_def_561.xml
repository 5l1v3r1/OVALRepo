<oval-def:definition xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" class="vulnerability" id="oval:com.dtcc:def:561" version="0">
  <oval-def:metadata>
    <oval-def:title>OpenSSL Security Bypass Vulnerability - CVE-2017-3737</oval-def:title>
    <oval-def:affected family="windows">
      <oval-def:platform>Microsoft Windows Server 2003</oval-def:platform>
      <oval-def:platform>Microsoft Windows Server 2008</oval-def:platform>
      <oval-def:platform>Microsoft Windows 7</oval-def:platform>
      <oval-def:platform>Microsoft Windows Server 2008 R2</oval-def:platform>
      <oval-def:platform>Microsoft Windows Server 2012</oval-def:platform>
      <oval-def:platform>Microsoft Windows 8</oval-def:platform>
      <oval-def:platform>Microsoft Windows 8.1</oval-def:platform>
      <oval-def:platform>Microsoft Windows Server 2012 R2</oval-def:platform>
      <oval-def:platform>Microsoft Windows 10</oval-def:platform>
      <oval-def:platform>Microsoft Windows Server 2016</oval-def:platform>
      <oval-def:product>OpenSSL</oval-def:product>
    </oval-def:affected>
    <oval-def:reference ref_id="CVE-2017-3737" ref_url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-3737" source="CVE" />
    <oval-def:description>OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an "error state" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.</oval-def:description>
    <oval-def:oval_repository>
      <oval-def:dates>
        <oval-def:submitted date="2018-02-05T12:46:10+08:00">
          <oval-def:contributor organization="DTCC">Jose Israel Padilla</oval-def:contributor>
        </oval-def:submitted>
      </oval-def:dates>
      <oval-def:status>INITIAL SUBMISSION</oval-def:status>
    </oval-def:oval_repository>
  </oval-def:metadata>
  <oval-def:criteria comment="Check for vulnerable OpenSSL installation + vulnerable file version" operator="OR">
    <oval-def:criteria comment="OpenSSL is installed + file version" operator="AND">
      <oval-def:extend_definition comment="OpenSSL is installed" definition_ref="oval:org.mitre.oval:def:12331" />
      <oval-def:criterion comment="Check if OpenSSL 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n" test_ref="oval:com.dtcc:tst:664" />
    </oval-def:criteria>
    <oval-def:criteria comment="OpenSSL (x86) is installed + file version" operator="AND">
      <oval-def:criterion comment="OpenSSL (32_bit) is installed" test_ref="oval:org.mitre.oval:tst:113875" />
      <oval-def:criterion comment="Check if OpenSSL 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n (x86)" test_ref="oval:com.dtcc:tst:665" />
    </oval-def:criteria>
    <oval-def:criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on ProgramFilesDir" test_ref="oval:com.dtcc:tst:666" />
    <oval-def:criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on ProgramFilesDir (x86)" test_ref="oval:com.dtcc:tst:667" />
    <oval-def:criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on System32 and SysWOW64" test_ref="oval:com.dtcc:tst:668" />
  </oval-def:criteria>
</oval-def:definition>
